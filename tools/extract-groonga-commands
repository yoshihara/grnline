#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require "optparse"

repository_path = nil

options_parser = OptionParser.new
banner = <<BANNER
Usage: #{$0} --repository=/path/to/groonga
       This commands Extracts groonga commands from the source in
       groonga repository.
       Now, groonga commands are defined in proc.c with
       'DEF_COMMAND()' macro.
       The extracted commands are pretty printed like Array.

Options:
BANNER
options_parser.banner = banner

options_parser.on("--repository=REPOSITORY",
                  "Path to a repository of groonga.") do |repository|
  repository_path = repository
end

options_parser.on_tail("-h", "--help", "Show this message and exit.") do
  puts(options_parser.help)
  exit(true)
end

options_parser.parse!(ARGV)

exit(false) unless repository_path

proc_path = File.join(repository_path, "lib", "proc.c")
source = File.read(proc_path)
commands = []
variables = []
functions = []

source.each_line do |line|
  case line
  when /\s+DEF_COMMAND\("(.+)".+/
    commands << $1
  when /\s+DEF_VAR\(vars\[\d+\], "(.+)"\);/
    variables << $1
  when /\s+.+grn_proc_create\(ctx, "(.+)", .+,/
    functions << $1
  end
end

pretty_print = ->(words) do
  "[\"#{words.uniq.sort.join('", "')}\"]"
end

puts pretty_print[commands]
puts pretty_print[variables.collect {|variable| "--#{variable}"}]
puts pretty_print[functions]
